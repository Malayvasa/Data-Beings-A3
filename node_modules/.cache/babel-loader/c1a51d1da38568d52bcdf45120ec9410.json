{"ast":null,"code":"var getSrc = item => typeof item === 'string' ? item : item.src;\n\nvar getArgs = ({\n  amount = 3,\n  format = 'array',\n  group = 20,\n  sample = 10\n} = {}) => ({\n  amount,\n  format,\n  group,\n  sample\n});\n\nvar format = (input, args) => {\n  var list = input.map(val => {\n    var rgb = Array.isArray(val) ? val : val.split(',').map(Number);\n    return args.format === 'hex' ? rgbToHex(rgb) : rgb;\n  });\n  return args.amount === 1 || list.length === 1 ? list[0] : list;\n};\n\nvar group = (number, grouping) => {\n  var grouped = Math.round(number / grouping) * grouping;\n  return Math.min(grouped, 255);\n};\n\nvar rgbToHex = rgb => '#' + rgb.map(val => {\n  var hex = val.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}).join('');\n\nvar getImageData = src => new Promise((resolve, reject) => {\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var img = new Image();\n\n  img.onload = () => {\n    canvas.height = img.height;\n    canvas.width = img.width;\n    context.drawImage(img, 0, 0);\n    var data = context.getImageData(0, 0, img.width, img.height).data;\n    resolve(data);\n  };\n\n  img.onerror = () => reject(Error('Image loading failed.'));\n\n  img.crossOrigin = '';\n  img.src = src;\n});\n\nvar getAverage = (data, args) => {\n  var gap = 4 * args.sample;\n  var amount = data.length / gap;\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n\n  for (var i = 0; i < data.length; i += gap) {\n    rgb.r += data[i];\n    rgb.g += data[i + 1];\n    rgb.b += data[i + 2];\n  }\n\n  return format([[Math.round(rgb.r / amount), Math.round(rgb.g / amount), Math.round(rgb.b / amount)]], args);\n};\n\nvar getProminent = (data, args) => {\n  var gap = 4 * args.sample;\n  var colors = {};\n\n  for (var i = 0; i < data.length; i += gap) {\n    var rgb = [group(data[i], args.group), group(data[i + 1], args.group), group(data[i + 2], args.group)].join();\n    colors[rgb] = colors[rgb] ? colors[rgb] + 1 : 1;\n  }\n\n  return format(Object.entries(colors).sort(([_keyA, valA], [_keyB, valB]) => valA > valB ? -1 : 1).slice(0, args.amount).map(([rgb]) => rgb), args);\n};\n\nvar process = (handler, item, args) => new Promise((resolve, reject) => getImageData(getSrc(item)).then(data => resolve(handler(data, getArgs(args)))).catch(error => reject(error)));\n\nvar average = (item, args) => process(getAverage, item, args);\n\nvar prominent = (item, args) => process(getProminent, item, args);\n\nexport { average, prominent };","map":{"version":3,"sources":["/Users/malayvasa/Desktop/gender-bender/iteration-two/node_modules/color.js/dist/color.esm.js"],"names":["getSrc","item","src","getArgs","amount","format","group","sample","input","args","list","map","val","rgb","Array","isArray","split","Number","rgbToHex","length","number","grouping","grouped","Math","round","min","hex","toString","join","getImageData","Promise","resolve","reject","canvas","document","createElement","context","getContext","img","Image","onload","height","width","drawImage","data","onerror","Error","crossOrigin","getAverage","gap","r","g","b","i","getProminent","colors","Object","entries","sort","_keyA","valA","_keyB","valB","slice","process","handler","then","catch","error","average","prominent"],"mappings":"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","sourcesContent":["var getSrc = item => typeof item === 'string' ? item : item.src;\n\nvar getArgs = ({\n  amount = 3,\n  format = 'array',\n  group = 20,\n  sample = 10\n} = {}) => ({\n  amount,\n  format,\n  group,\n  sample\n});\n\nvar format = (input, args) => {\n  var list = input.map(val => {\n    var rgb = Array.isArray(val) ? val : val.split(',').map(Number);\n    return args.format === 'hex' ? rgbToHex(rgb) : rgb;\n  });\n  return args.amount === 1 || list.length === 1 ? list[0] : list;\n};\n\nvar group = (number, grouping) => {\n  var grouped = Math.round(number / grouping) * grouping;\n  return Math.min(grouped, 255);\n};\n\nvar rgbToHex = rgb => '#' + rgb.map(val => {\n  var hex = val.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}).join('');\n\nvar getImageData = src => new Promise((resolve, reject) => {\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var img = new Image();\n\n  img.onload = () => {\n    canvas.height = img.height;\n    canvas.width = img.width;\n    context.drawImage(img, 0, 0);\n    var data = context.getImageData(0, 0, img.width, img.height).data;\n    resolve(data);\n  };\n\n  img.onerror = () => reject(Error('Image loading failed.'));\n\n  img.crossOrigin = '';\n  img.src = src;\n});\n\nvar getAverage = (data, args) => {\n  var gap = 4 * args.sample;\n  var amount = data.length / gap;\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n\n  for (var i = 0; i < data.length; i += gap) {\n    rgb.r += data[i];\n    rgb.g += data[i + 1];\n    rgb.b += data[i + 2];\n  }\n\n  return format([[Math.round(rgb.r / amount), Math.round(rgb.g / amount), Math.round(rgb.b / amount)]], args);\n};\n\nvar getProminent = (data, args) => {\n  var gap = 4 * args.sample;\n  var colors = {};\n\n  for (var i = 0; i < data.length; i += gap) {\n    var rgb = [group(data[i], args.group), group(data[i + 1], args.group), group(data[i + 2], args.group)].join();\n    colors[rgb] = colors[rgb] ? colors[rgb] + 1 : 1;\n  }\n\n  return format(Object.entries(colors).sort(([_keyA, valA], [_keyB, valB]) => valA > valB ? -1 : 1).slice(0, args.amount).map(([rgb]) => rgb), args);\n};\n\nvar process = (handler, item, args) => new Promise((resolve, reject) => getImageData(getSrc(item)).then(data => resolve(handler(data, getArgs(args)))).catch(error => reject(error)));\n\nvar average = (item, args) => process(getAverage, item, args);\n\nvar prominent = (item, args) => process(getProminent, item, args);\n\nexport { average, prominent };\n"]},"metadata":{},"sourceType":"module"}